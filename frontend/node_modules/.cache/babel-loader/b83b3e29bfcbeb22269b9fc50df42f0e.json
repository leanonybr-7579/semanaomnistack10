{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ulisses/Desktop/Codes/semanaomnistack10/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ulisses/Desktop/Codes/semanaomnistack10/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ulisses/Desktop/Codes/semanaomnistack10/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./style.css';export default function Index(_ref){var onSubmit=_ref.onSubmit;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),github_username=_useState2[0],setGithubUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),techs=_useState4[0],setTechs=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),latitude=_useState6[0],setLatitude=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),longitude=_useState8[0],setLongitude=_useState8[1];useEffect(function(){navigator.geolocation.getCurrentPosition(function(position){var _position$coords=position.coords,latitude=_position$coords.latitude,longitude=_position$coords.longitude;setLatitude(latitude);setLongitude(longitude);},function(err){console.log(err);},{timeout:30000});},[]);function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.next=3;return onSubmit({github_username:github_username,techs:techs,latitude:latitude,longitude:longitude});case 3:setGithubUsername('');setTechs('');case 5:case\"end\":return _context.stop();}}},_callee);}));return _handleSubmit.apply(this,arguments);}return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"input-block\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"github_username\"},\"Github Username\"),/*#__PURE__*/React.createElement(\"input\",{name:\"github_username\",id:\"github_username\",value:github_username,onChange:function onChange(e){return setGithubUsername(e.target.value);},required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-block\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"techs\"},\"Technologies: \"),/*#__PURE__*/React.createElement(\"input\",{name:\"techs\",id:\"techs\",value:techs,onChange:function onChange(e){return setTechs(e.target.value);},required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-block\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"latitude\"},\"Latitude: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"latitude\",id:\"latitude\",value:latitude,onChange:function onChange(e){return setLatitude(e.target.value);},required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-block\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"longitude\"},\"Longitude: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"longitude\",id:\"longitude\",value:longitude,onChange:function onChange(e){return setLongitude(e.target.value);},required:true})),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",onClick:handleSubmit},\"Submit\")));}","map":{"version":3,"sources":["/Users/ulisses/Desktop/Codes/semanaomnistack10/frontend/src/components/DevForm/index.js"],"names":["React","useState","useEffect","Index","onSubmit","github_username","setGithubUsername","techs","setTechs","latitude","setLatitude","longitude","setLongitude","navigator","geolocation","getCurrentPosition","position","coords","err","console","log","timeout","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './style.css'\n\nexport default function Index({ onSubmit }) {\n    const [github_username, setGithubUsername] = useState('')\n    const [techs, setTechs] = useState('')\n\n    const [latitude, setLatitude] = useState('')\n    const [longitude, setLongitude] = useState('')\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const { latitude, longitude } = position.coords\n            setLatitude(latitude)\n            setLongitude(longitude)\n          },\n          (err) => {\n            console.log(err)\n          },\n          {\n            timeout: 30000\n          }\n        )\n    }, [])\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        await onSubmit({\n            github_username,\n            techs,\n            latitude,\n            longitude\n        })\n\n        setGithubUsername('')\n        setTechs('')\n    }\n\n    return (\n        <form>\n        <div className=\"input-block\">\n          <label htmlFor=\"github_username\">Github Username</label>\n          <input \n            name=\"github_username\" \n            id=\"github_username\" \n            value={github_username}\n            onChange={e => setGithubUsername(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"input-block\">\n          <label htmlFor=\"techs\">Technologies: </label>\n          <input \n            name=\"techs\"\n            id=\"techs\" \n            value={techs}\n            onChange={e => setTechs(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <div className=\"input-block\">\n            <label htmlFor=\"latitude\">Latitude: </label>\n            <input \n              type=\"number\" \n              name=\"latitude\" \n              id=\"latitude\" \n              value={latitude} \n              onChange={e => setLatitude(e.target.value)}\n              required\n            />\n          </div>   \n\n          <div className=\"input-block\">\n              <label htmlFor=\"longitude\">Longitude: </label>\n            <input \n              type=\"number\"\n              name=\"longitude\"\n              id=\"longitude\" \n              value={longitude}\n              onChange={e => setLongitude(e.target.value)}\n              required\n            />\n          </div>  \n\n          <button type=\"submit\" onClick={handleSubmit}>Submit</button>        \n        </div>\n        </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}